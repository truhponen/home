# Based on Helm chart
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: oauth2-proxy
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: oauth2-proxy
  name: oauth2-proxy
  namespace: kubernetes-dashboard
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: oauth2-proxy
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: oauth2-proxy
  name: oauth2-proxy
  namespace: kubernetes-dashboard
data:
  oauth2_proxy.cfg: "email_domains = [ \"*\" ]\nupstreams = [ \"file:///dev/null\" ]"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oauth2-proxy
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: oauth2-proxy
  name: oauth2-proxy
  namespace: kubernetes-dashboard
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      appProtocol: http
      name: http
    - port: 44180
      protocol: TCP
      appProtocol: http
      targetPort: metrics
      name: metrics
  selector:
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: oauth2-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: oauth2-proxy
  name: oauth2-proxy
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
      app.kubernetes.io/instance: oauth2-proxy
  template:
    metadata:
      annotations:
        checksum/config: c0329892592df8b1519fac51e84aee8cf879bb8e157e5a04f6556b38b5a2435b
        checksum/secret: 8fa6fdae65861caa2986544b8860a5205be1937328c8ec2bad6bad076b9e2425
        checksum/google-secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/redis-secret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app: oauth2-proxy
        app.kubernetes.io/component: authentication-proxy
        app.kubernetes.io/part-of: oauth2-proxy
        app.kubernetes.io/name: oauth2-proxy
        app.kubernetes.io/instance: oauth2-proxy
    spec:
      serviceAccountName: oauth2-proxy
      enableServiceLinks: true
      automountServiceAccountToken: true
      containers:
      - name: oauth2-proxy
        image: "quay.io/oauth2-proxy/oauth2-proxy:v7.8.2"
        imagePullPolicy: IfNotPresent
        args:
          - --http-address=0.0.0.0:4180
          - --https-address=0.0.0.0:4443
          - --metrics-address=0.0.0.0:44180
          - --skip-provider-button=true
          - --provider=keycloak-oidc
          - --oidc-issuer-url=http://keycloak.cluster.svc.cluster.local/realms/kotimme
          - --skip-oidc-discovery=true
          - --login-url=https://keycloak.kotimme.cc/realms/kotimme/protocol/openid-connect/auth
          - --redeem-url=http://keycloak.cluster.svc.cluster.local/realms/kotimme/protocol/openid-connect/token
          - --oidc-jwks-url=http://keycloak.cluster.svc.cluster.local/realms/kotimme/protocol/openid-connect/certs
          - --profile-url=http://keycloak.cluster.svc.cluster.local/realms/kotimme/protocol/openid-connect/userinfo
          - --redirect-url=https://kubernetes.kotimme.cc/oauth2/callback
          - --code-challenge-method=S256
          - --cookie-refresh=9m
          - --cookie-expire=120h
          - --pass-authorization-header=true
          - --ssl-upstream-insecure-skip-verify=true
          - --upstream=https://kubernetes-dashboard-kong-proxy
          - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name:  oauth2-proxy
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name:  oauth2-proxy
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name:  oauth2-proxy
              key: cookie-secret
        - name: OAUTH2_PROXY_SESSION_STORE_TYPE
          value: "redis"
        - name: OAUTH2_PROXY_REDIS_CONNECTION_URL
          value: redis://redis:6379
        ports:
          - containerPort: 4180
            name: http
            protocol: TCP
          - containerPort: 44180
            protocol: TCP
            name: metrics
        livenessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          timeoutSeconds: 5
          successThreshold: 1
          periodSeconds: 10
        resources:
          {}
        volumeMounts:
        - mountPath: /etc/oauth2_proxy/oauth2_proxy.cfg
          name: configmain
          subPath: oauth2_proxy.cfg
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2000
          runAsNonRoot: true
          runAsUser: 2000
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - configMap:
          defaultMode: 420
          name: oauth2-proxy
        name: configmain
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: oauth2-proxy
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: oauth2-proxy
  name: oauth2-proxy
  namespace: kubernetes-dashboard
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-dns
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  ingressClassName: "traefik"
  rules:
    - host: "kubernetes.kotimme.cc"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: oauth2-proxy
                port:
                  number: 80
  tls:
    - hosts:
      - kubernetes.kotimme.cc
      secretName: oauth2-proxy-certs
