#deployment:
#  additionalVolumes:
#  - name: nfs-traefik
#    persistentVolumeClaim:
#      claimName: nfs-traefik
#additionalVolumeMounts:
#- name: nfs-traefik
#  mountPath: /etc/traefik/acme
#  subPath: traefik


#certificatesResolvers:
#  myresolver:
#    acme:
#      email: truhponen@gmail.com
#      storage: acme.json
#      dnsChallenge:
#        provider: cloudflare
#        delayBeforeCheck: 60

# Publish and protect Traefik Dashboard with basic Auth
# Create an IngressRoute for the dashboard
ingressRoute:
  dashboard:
    enabled: true

    # Custom match rule with host domain
    matchRule: "Host(`kube-traefik.kotimme.cc`)" # && PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
    entryPoints: ["websecure", "web"]
    # Add custom middlewares : authentication and redirection
    middlewares:
      - name: traefik-dashboard-auth

service:
  spec:
    loadBalancerIP: "192.168.68.250"

# Create the custom middlewares used by the IngressRoute dashboard (can also be created in another way).
# /!\ Yes, you need to replace "changeme" password with a better one. /!\
extraObjects:

#  - kind: PersistentVolumeClaim
#    apiVersion: v1
#    metadata:
#      name: nfs-traefik
#    spec:
#      accessModes:
#        - ReadWriteMany
#      resources:
#        requests:
#          storage: 10Gi

#  - apiVersion: v1
#    kind: PersistentVolume
#    metadata:
#      annotations:
#        pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
#      name: nfs-traefik
#    spec:
#      capacity:
#        storage: 10Gi
#      accessModes:
#        - ReadWriteMany
#      persistentVolumeReclaimPolicy: Retain
#      storageClassName: nfs
#      mountOptions:
#        - nfsvers=4.1
#      csi:
#        driver: nfs.csi.k8s.io
        # volumeHandle format: {nfs-server-address}#{sub-dir-name}#{share-name}
        # make sure this value is unique for every share in the cluster
#        volumeHandle: 192.168.68.150/rpool/kubernetes/cluster
#        volumeAttributes:
#          server: 192.168.68.150
#          share: /rpool/kubernetes/cluster

# Secret is created using Secret.yaml
#  - apiVersion: v1
#    kind: Secret
#    metadata:
#      name: traefik-dashboard-auth-secret
#    type: kubernetes.io/basic-auth
#    stringData:
#      username: admin
#      password: changeme

  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard-auth
    spec:
      basicAuth:
        secret: traefik-dashboard-auth-secret
