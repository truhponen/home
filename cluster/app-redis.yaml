---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redis
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-dns
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  tls:
  - secretName: redis-certs
    hosts:
    - redis.kotimme.cc
  rules:
  - host: redis.kotimme.cc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: redisinsight
            port:
              name: redisinsight
---
apiVersion: v1
kind: Service
metadata:
    name: redis
spec:
    ports:
      - name: redis
        port: 6379
        targetPort: redis
    selector:
        app: redis
    type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
    name: redisinsight
spec:
    ports:
      - name: redisinsight
        port: 80
        targetPort: redisinsight
    selector:
        app: redis
    type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  serviceName: "redis"
  template:
    metadata:
      labels:
        app: redis
    spec:
      securityContext:
        runAsUser: 1978 #fsGroup is not enough as redis creates files with 755 and 744
        fsGroup: 1978
      containers:
      - name: redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: pvc-nfs
          mountPath: /data
          subPath: redis/redis
      - name: redisinsight
        image: redis/redisinsight:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: redisinsight
          containerPort: 5540
        volumeMounts:
        - name: pvc-nfs
          mountPath: /data
          subPath: redis/redisinsight
#      imagePullSecrets:
#        - name: ghcr-io
      volumes:
        - name: pvc-nfs
          persistentVolumeClaim:
           claimName: nfs
